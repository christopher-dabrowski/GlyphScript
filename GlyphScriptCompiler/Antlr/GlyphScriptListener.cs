//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GlyphScript.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace GlyphScriptCompiler.Antlr {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GlyphScriptParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IGlyphScriptListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] GlyphScriptParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] GlyphScriptParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] GlyphScriptParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] GlyphScriptParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallExp([NotNull] GlyphScriptParser.FunctionCallExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallExp([NotNull] GlyphScriptParser.FunctionCallExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>mulDivExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulDivExp([NotNull] GlyphScriptParser.MulDivExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>mulDivExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulDivExp([NotNull] GlyphScriptParser.MulDivExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lessThanExpr</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLessThanExpr([NotNull] GlyphScriptParser.LessThanExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lessThanExpr</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLessThanExpr([NotNull] GlyphScriptParser.LessThanExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExpr</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonExpr([NotNull] GlyphScriptParser.ComparisonExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExpr</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonExpr([NotNull] GlyphScriptParser.ComparisonExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>idAtomExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdAtomExp([NotNull] GlyphScriptParser.IdAtomExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>idAtomExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdAtomExp([NotNull] GlyphScriptParser.IdAtomExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>addSubExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSubExp([NotNull] GlyphScriptParser.AddSubExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addSubExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSubExp([NotNull] GlyphScriptParser.AddSubExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>greaterThanExpr</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGreaterThanExpr([NotNull] GlyphScriptParser.GreaterThanExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>greaterThanExpr</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGreaterThanExpr([NotNull] GlyphScriptParser.GreaterThanExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotExpr([NotNull] GlyphScriptParser.NotExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotExpr([NotNull] GlyphScriptParser.NotExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>powerExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPowerExp([NotNull] GlyphScriptParser.PowerExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>powerExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPowerExp([NotNull] GlyphScriptParser.PowerExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>xorExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXorExp([NotNull] GlyphScriptParser.XorExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>xorExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXorExp([NotNull] GlyphScriptParser.XorExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisExp([NotNull] GlyphScriptParser.ParenthesisExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisExp([NotNull] GlyphScriptParser.ParenthesisExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayAccessExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAccessExp([NotNull] GlyphScriptParser.ArrayAccessExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayAccessExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAccessExp([NotNull] GlyphScriptParser.ArrayAccessExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>valueExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueExp([NotNull] GlyphScriptParser.ValueExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>valueExp</c>
	/// labeled alternative in <see cref="GlyphScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueExp([NotNull] GlyphScriptParser.ValueExpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] GlyphScriptParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] GlyphScriptParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] GlyphScriptParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] GlyphScriptParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] GlyphScriptParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] GlyphScriptParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] GlyphScriptParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] GlyphScriptParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] GlyphScriptParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] GlyphScriptParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] GlyphScriptParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] GlyphScriptParser.ParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] GlyphScriptParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] GlyphScriptParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] GlyphScriptParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] GlyphScriptParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] GlyphScriptParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] GlyphScriptParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] GlyphScriptParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] GlyphScriptParser.PrintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRead([NotNull] GlyphScriptParser.ReadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRead([NotNull] GlyphScriptParser.ReadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] GlyphScriptParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] GlyphScriptParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] GlyphScriptParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] GlyphScriptParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.defaultDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultDeclaration([NotNull] GlyphScriptParser.DefaultDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.defaultDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultDeclaration([NotNull] GlyphScriptParser.DefaultDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.initializingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializingDeclaration([NotNull] GlyphScriptParser.InitializingDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.initializingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializingDeclaration([NotNull] GlyphScriptParser.InitializingDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.immediateValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImmediateValue([NotNull] GlyphScriptParser.ImmediateValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.immediateValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImmediateValue([NotNull] GlyphScriptParser.ImmediateValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] GlyphScriptParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] GlyphScriptParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.arrayOfType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayOfType([NotNull] GlyphScriptParser.ArrayOfTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.arrayOfType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayOfType([NotNull] GlyphScriptParser.ArrayOfTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] GlyphScriptParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] GlyphScriptParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GlyphScriptParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] GlyphScriptParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GlyphScriptParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] GlyphScriptParser.ExpressionListContext context);
}
} // namespace GlyphScriptCompiler.Antlr
