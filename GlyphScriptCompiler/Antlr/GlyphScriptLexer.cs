//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GlyphScript.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace GlyphScriptCompiler.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class GlyphScriptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, COMMENT=4, MULTILINE_COMMENT=5, LONG=6, INT=7, 
		DOUBLE=8, STRING_TYPE=9, FLOAT=10, BOOLEAN_TYPE=11, WRITE=12, READ=13, 
		STRING_LITERAL=14, ID=15, LONG_LITERAL=16, INT_LITERAL=17, DOUBLE_LITERAL=18, 
		FLOAT_LITERAL=19, TRUE_LITERAL=20, FALSE_LITERAL=21, ADDITION_SYMBOL=22, 
		SUBTRACTION_SYMBOL=23, MULTIPLICATION_SYMBOL=24, POWER_SYMBOL=25, DIVISION_SYMBOL=26, 
		NEWLINE=27, WHITE_SPACE=28;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "COMMENT", "MULTILINE_COMMENT", "LONG", "INT", 
		"DOUBLE", "STRING_TYPE", "FLOAT", "BOOLEAN_TYPE", "WRITE", "READ", "STRING_LITERAL", 
		"ID", "LONG_LITERAL", "INT_LITERAL", "DOUBLE_LITERAL", "FLOAT_LITERAL", 
		"TRUE_LITERAL", "FALSE_LITERAL", "ADDITION_SYMBOL", "SUBTRACTION_SYMBOL", 
		"MULTIPLICATION_SYMBOL", "POWER_SYMBOL", "DIVISION_SYMBOL", "NEWLINE", 
		"WHITE_SPACE", "STRING_CHAR", "LOUDSPEAKER_EMOJI", "KEYBOARD_EMOJI", "PLUS_EMOJI", 
		"MINUS_EMOJI", "ASTERISK_EMOJI", "RED_TRIANGLE_EMOJI", "MULTIPLICATION_EMOJI", 
		"DIVISION_EMOJI", "INT_SYMBOL", "FLOAT_SYMBOL", "LETTERS_SYMBOL", "OK_EMOJI", 
		"CHECK_MARK_EMOJI", "X_EMOJI"
	};


	public GlyphScriptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public GlyphScriptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, "COMMENT", "MULTILINE_COMMENT", "LONG", "INT", 
		"DOUBLE", "STRING_TYPE", "FLOAT", "BOOLEAN_TYPE", "WRITE", "READ", "STRING_LITERAL", 
		"ID", "LONG_LITERAL", "INT_LITERAL", "DOUBLE_LITERAL", "FLOAT_LITERAL", 
		"TRUE_LITERAL", "FALSE_LITERAL", "ADDITION_SYMBOL", "SUBTRACTION_SYMBOL", 
		"MULTIPLICATION_SYMBOL", "POWER_SYMBOL", "DIVISION_SYMBOL", "NEWLINE", 
		"WHITE_SPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "GlyphScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static GlyphScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,28,542,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,5,3,98,8,3,10,3,12,3,101,
		9,3,1,3,1,3,1,4,1,4,1,4,1,4,5,4,109,8,4,10,4,12,4,112,9,4,1,4,1,4,1,4,
		1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,
		1,11,1,12,1,12,1,13,1,13,5,13,139,8,13,10,13,12,13,142,9,13,1,13,1,13,
		1,14,1,14,5,14,148,8,14,10,14,12,14,151,9,14,1,15,4,15,154,8,15,11,15,
		12,15,155,1,15,1,15,1,16,4,16,161,8,16,11,16,12,16,162,1,17,4,17,166,8,
		17,11,17,12,17,167,1,17,1,17,4,17,172,8,17,11,17,12,17,173,3,17,176,8,
		17,1,17,1,17,1,18,4,18,181,8,18,11,18,12,18,182,1,18,1,18,4,18,187,8,18,
		11,18,12,18,188,3,18,191,8,18,1,18,3,18,194,8,18,1,19,1,19,1,19,1,19,1,
		19,3,19,201,8,19,1,20,1,20,1,20,1,20,1,20,1,20,3,20,209,8,20,1,21,1,21,
		3,21,213,8,21,1,22,1,22,3,22,217,8,22,1,23,1,23,1,23,3,23,222,8,23,1,24,
		1,24,3,24,226,8,24,1,25,1,25,3,25,230,8,25,1,26,3,26,233,8,26,1,26,1,26,
		1,27,4,27,238,8,27,11,27,12,27,239,1,27,1,27,1,28,1,28,1,29,1,29,1,29,
		1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,260,8,29,1,
		30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,274,8,30,
		1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,
		1,31,1,31,1,31,1,31,3,31,294,8,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
		32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,315,8,32,
		1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,3,33,
		330,8,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,
		34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,3,34,353,8,34,1,35,1,35,1,35,
		1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
		1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,381,8,35,1,36,1,36,1,
		36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
		36,1,36,1,36,1,36,1,36,1,36,3,36,405,8,36,1,37,1,37,1,37,1,37,1,37,1,37,
		1,37,3,37,414,8,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
		38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
		38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
		38,1,38,1,38,3,38,457,8,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
		1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
		1,39,1,39,1,39,1,39,1,39,3,39,487,8,39,1,40,1,40,1,40,1,40,1,40,3,40,494,
		8,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
		1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
		1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,3,41,535,8,
		41,1,42,1,42,1,42,1,42,3,42,541,8,42,1,110,0,43,1,1,3,2,5,3,7,4,9,5,11,
		6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
		37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,0,59,0,
		61,0,63,0,65,0,67,0,69,0,71,0,73,0,75,0,77,0,79,0,81,0,83,0,85,0,1,0,10,
		2,0,10,10,13,13,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,
		0,48,57,2,0,76,76,108,108,2,0,68,68,100,100,2,0,70,70,102,102,2,0,9,9,
		32,32,5,0,9,10,13,13,36,36,39,39,92,92,2,0,128311,128311,128313,128313,
		570,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
		0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
		0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
		1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
		0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
		1,0,0,0,1,87,1,0,0,0,3,89,1,0,0,0,5,91,1,0,0,0,7,93,1,0,0,0,9,104,1,0,
		0,0,11,118,1,0,0,0,13,121,1,0,0,0,15,123,1,0,0,0,17,126,1,0,0,0,19,128,
		1,0,0,0,21,130,1,0,0,0,23,132,1,0,0,0,25,134,1,0,0,0,27,136,1,0,0,0,29,
		145,1,0,0,0,31,153,1,0,0,0,33,160,1,0,0,0,35,165,1,0,0,0,37,180,1,0,0,
		0,39,200,1,0,0,0,41,208,1,0,0,0,43,212,1,0,0,0,45,216,1,0,0,0,47,221,1,
		0,0,0,49,225,1,0,0,0,51,229,1,0,0,0,53,232,1,0,0,0,55,237,1,0,0,0,57,243,
		1,0,0,0,59,259,1,0,0,0,61,273,1,0,0,0,63,293,1,0,0,0,65,314,1,0,0,0,67,
		329,1,0,0,0,69,352,1,0,0,0,71,380,1,0,0,0,73,404,1,0,0,0,75,413,1,0,0,
		0,77,456,1,0,0,0,79,486,1,0,0,0,81,493,1,0,0,0,83,534,1,0,0,0,85,540,1,
		0,0,0,87,88,5,40,0,0,88,2,1,0,0,0,89,90,5,41,0,0,90,4,1,0,0,0,91,92,5,
		61,0,0,92,6,1,0,0,0,93,94,5,47,0,0,94,95,5,47,0,0,95,99,1,0,0,0,96,98,
		8,0,0,0,97,96,1,0,0,0,98,101,1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,100,
		102,1,0,0,0,101,99,1,0,0,0,102,103,6,3,0,0,103,8,1,0,0,0,104,105,5,47,
		0,0,105,106,5,42,0,0,106,110,1,0,0,0,107,109,9,0,0,0,108,107,1,0,0,0,109,
		112,1,0,0,0,110,111,1,0,0,0,110,108,1,0,0,0,111,113,1,0,0,0,112,110,1,
		0,0,0,113,114,5,42,0,0,114,115,5,47,0,0,115,116,1,0,0,0,116,117,6,4,0,
		0,117,10,1,0,0,0,118,119,3,75,37,0,119,120,3,75,37,0,120,12,1,0,0,0,121,
		122,3,75,37,0,122,14,1,0,0,0,123,124,3,77,38,0,124,125,3,77,38,0,125,16,
		1,0,0,0,126,127,3,79,39,0,127,18,1,0,0,0,128,129,3,77,38,0,129,20,1,0,
		0,0,130,131,3,81,40,0,131,22,1,0,0,0,132,133,3,59,29,0,133,24,1,0,0,0,
		134,135,3,61,30,0,135,26,1,0,0,0,136,140,5,34,0,0,137,139,3,57,28,0,138,
		137,1,0,0,0,139,142,1,0,0,0,140,138,1,0,0,0,140,141,1,0,0,0,141,143,1,
		0,0,0,142,140,1,0,0,0,143,144,5,34,0,0,144,28,1,0,0,0,145,149,7,1,0,0,
		146,148,7,2,0,0,147,146,1,0,0,0,148,151,1,0,0,0,149,147,1,0,0,0,149,150,
		1,0,0,0,150,30,1,0,0,0,151,149,1,0,0,0,152,154,7,3,0,0,153,152,1,0,0,0,
		154,155,1,0,0,0,155,153,1,0,0,0,155,156,1,0,0,0,156,157,1,0,0,0,157,158,
		7,4,0,0,158,32,1,0,0,0,159,161,7,3,0,0,160,159,1,0,0,0,161,162,1,0,0,0,
		162,160,1,0,0,0,162,163,1,0,0,0,163,34,1,0,0,0,164,166,7,3,0,0,165,164,
		1,0,0,0,166,167,1,0,0,0,167,165,1,0,0,0,167,168,1,0,0,0,168,175,1,0,0,
		0,169,171,5,46,0,0,170,172,7,3,0,0,171,170,1,0,0,0,172,173,1,0,0,0,173,
		171,1,0,0,0,173,174,1,0,0,0,174,176,1,0,0,0,175,169,1,0,0,0,175,176,1,
		0,0,0,176,177,1,0,0,0,177,178,7,5,0,0,178,36,1,0,0,0,179,181,7,3,0,0,180,
		179,1,0,0,0,181,182,1,0,0,0,182,180,1,0,0,0,182,183,1,0,0,0,183,190,1,
		0,0,0,184,186,5,46,0,0,185,187,7,3,0,0,186,185,1,0,0,0,187,188,1,0,0,0,
		188,186,1,0,0,0,188,189,1,0,0,0,189,191,1,0,0,0,190,184,1,0,0,0,190,191,
		1,0,0,0,191,193,1,0,0,0,192,194,7,6,0,0,193,192,1,0,0,0,193,194,1,0,0,
		0,194,38,1,0,0,0,195,201,3,83,41,0,196,197,5,116,0,0,197,198,5,114,0,0,
		198,199,5,117,0,0,199,201,5,101,0,0,200,195,1,0,0,0,200,196,1,0,0,0,201,
		40,1,0,0,0,202,209,3,85,42,0,203,204,5,102,0,0,204,205,5,97,0,0,205,206,
		5,108,0,0,206,207,5,115,0,0,207,209,5,101,0,0,208,202,1,0,0,0,208,203,
		1,0,0,0,209,42,1,0,0,0,210,213,5,43,0,0,211,213,3,63,31,0,212,210,1,0,
		0,0,212,211,1,0,0,0,213,44,1,0,0,0,214,217,5,45,0,0,215,217,3,65,32,0,
		216,214,1,0,0,0,216,215,1,0,0,0,217,46,1,0,0,0,218,222,5,42,0,0,219,222,
		3,67,33,0,220,222,3,71,35,0,221,218,1,0,0,0,221,219,1,0,0,0,221,220,1,
		0,0,0,222,48,1,0,0,0,223,226,5,94,0,0,224,226,3,69,34,0,225,223,1,0,0,
		0,225,224,1,0,0,0,226,50,1,0,0,0,227,230,5,47,0,0,228,230,3,73,36,0,229,
		227,1,0,0,0,229,228,1,0,0,0,230,52,1,0,0,0,231,233,5,13,0,0,232,231,1,
		0,0,0,232,233,1,0,0,0,233,234,1,0,0,0,234,235,5,10,0,0,235,54,1,0,0,0,
		236,238,7,7,0,0,237,236,1,0,0,0,238,239,1,0,0,0,239,237,1,0,0,0,239,240,
		1,0,0,0,240,241,1,0,0,0,241,242,6,27,0,0,242,56,1,0,0,0,243,244,8,8,0,
		0,244,58,1,0,0,0,245,260,5,128226,0,0,246,247,5,58,0,0,247,248,5,108,0,
		0,248,249,5,111,0,0,249,250,5,117,0,0,250,251,5,100,0,0,251,252,5,115,
		0,0,252,253,5,112,0,0,253,254,5,101,0,0,254,255,5,97,0,0,255,256,5,107,
		0,0,256,257,5,101,0,0,257,258,5,114,0,0,258,260,5,58,0,0,259,245,1,0,0,
		0,259,246,1,0,0,0,260,60,1,0,0,0,261,262,5,9000,0,0,262,274,5,65039,0,
		0,263,264,5,58,0,0,264,265,5,107,0,0,265,266,5,101,0,0,266,267,5,121,0,
		0,267,268,5,98,0,0,268,269,5,111,0,0,269,270,5,97,0,0,270,271,5,114,0,
		0,271,272,5,100,0,0,272,274,5,58,0,0,273,261,1,0,0,0,273,263,1,0,0,0,274,
		62,1,0,0,0,275,294,5,10133,0,0,276,277,5,58,0,0,277,278,5,104,0,0,278,
		279,5,101,0,0,279,280,5,97,0,0,280,281,5,118,0,0,281,282,5,121,0,0,282,
		283,5,95,0,0,283,284,5,112,0,0,284,285,5,108,0,0,285,286,5,117,0,0,286,
		287,5,115,0,0,287,288,5,95,0,0,288,289,5,115,0,0,289,290,5,105,0,0,290,
		291,5,103,0,0,291,292,5,110,0,0,292,294,5,58,0,0,293,275,1,0,0,0,293,276,
		1,0,0,0,294,64,1,0,0,0,295,315,5,10134,0,0,296,297,5,58,0,0,297,298,5,
		104,0,0,298,299,5,101,0,0,299,300,5,97,0,0,300,301,5,118,0,0,301,302,5,
		121,0,0,302,303,5,95,0,0,303,304,5,109,0,0,304,305,5,105,0,0,305,306,5,
		110,0,0,306,307,5,117,0,0,307,308,5,115,0,0,308,309,5,95,0,0,309,310,5,
		115,0,0,310,311,5,105,0,0,311,312,5,103,0,0,312,313,5,110,0,0,313,315,
		5,58,0,0,314,295,1,0,0,0,314,296,1,0,0,0,315,66,1,0,0,0,316,317,5,42,0,
		0,317,318,5,65039,0,0,318,330,5,8419,0,0,319,320,5,58,0,0,320,321,5,97,
		0,0,321,322,5,115,0,0,322,323,5,116,0,0,323,324,5,101,0,0,324,325,5,114,
		0,0,325,326,5,105,0,0,326,327,5,115,0,0,327,328,5,107,0,0,328,330,5,58,
		0,0,329,316,1,0,0,0,329,319,1,0,0,0,330,68,1,0,0,0,331,353,5,128314,0,
		0,332,333,5,58,0,0,333,334,5,115,0,0,334,335,5,109,0,0,335,336,5,97,0,
		0,336,337,5,108,0,0,337,338,5,108,0,0,338,339,5,95,0,0,339,340,5,114,0,
		0,340,341,5,101,0,0,341,342,5,100,0,0,342,343,5,95,0,0,343,344,5,116,0,
		0,344,345,5,114,0,0,345,346,5,105,0,0,346,347,5,97,0,0,347,348,5,110,0,
		0,348,349,5,103,0,0,349,350,5,108,0,0,350,351,5,101,0,0,351,353,5,58,0,
		0,352,331,1,0,0,0,352,332,1,0,0,0,353,70,1,0,0,0,354,355,5,10006,0,0,355,
		381,5,65039,0,0,356,357,5,58,0,0,357,358,5,104,0,0,358,359,5,101,0,0,359,
		360,5,97,0,0,360,361,5,118,0,0,361,362,5,121,0,0,362,363,5,95,0,0,363,
		364,5,109,0,0,364,365,5,117,0,0,365,366,5,108,0,0,366,367,5,116,0,0,367,
		368,5,105,0,0,368,369,5,112,0,0,369,370,5,108,0,0,370,371,5,105,0,0,371,
		372,5,99,0,0,372,373,5,97,0,0,373,374,5,116,0,0,374,375,5,105,0,0,375,
		376,5,111,0,0,376,377,5,110,0,0,377,378,5,95,0,0,378,379,5,120,0,0,379,
		381,5,58,0,0,380,354,1,0,0,0,380,356,1,0,0,0,381,72,1,0,0,0,382,405,5,
		10135,0,0,383,384,5,58,0,0,384,385,5,104,0,0,385,386,5,101,0,0,386,387,
		5,97,0,0,387,388,5,118,0,0,388,389,5,121,0,0,389,390,5,95,0,0,390,391,
		5,100,0,0,391,392,5,105,0,0,392,393,5,118,0,0,393,394,5,105,0,0,394,395,
		5,115,0,0,395,396,5,105,0,0,396,397,5,111,0,0,397,398,5,110,0,0,398,399,
		5,95,0,0,399,400,5,115,0,0,400,401,5,105,0,0,401,402,5,103,0,0,402,403,
		5,110,0,0,403,405,5,58,0,0,404,382,1,0,0,0,404,383,1,0,0,0,405,74,1,0,
		0,0,406,414,5,128290,0,0,407,408,5,58,0,0,408,409,5,49,0,0,409,410,5,50,
		0,0,410,411,5,51,0,0,411,412,5,52,0,0,412,414,5,58,0,0,413,406,1,0,0,0,
		413,407,1,0,0,0,414,76,1,0,0,0,415,457,7,9,0,0,416,417,5,58,0,0,417,418,
		5,108,0,0,418,419,5,97,0,0,419,420,5,114,0,0,420,421,5,103,0,0,421,422,
		5,101,0,0,422,423,5,95,0,0,423,424,5,98,0,0,424,425,5,108,0,0,425,426,
		5,117,0,0,426,427,5,101,0,0,427,428,5,95,0,0,428,429,5,100,0,0,429,430,
		5,105,0,0,430,431,5,97,0,0,431,432,5,109,0,0,432,433,5,111,0,0,433,434,
		5,110,0,0,434,435,5,100,0,0,435,457,5,58,0,0,436,437,5,58,0,0,437,438,
		5,115,0,0,438,439,5,109,0,0,439,440,5,97,0,0,440,441,5,108,0,0,441,442,
		5,108,0,0,442,443,5,95,0,0,443,444,5,98,0,0,444,445,5,108,0,0,445,446,
		5,117,0,0,446,447,5,101,0,0,447,448,5,95,0,0,448,449,5,100,0,0,449,450,
		5,105,0,0,450,451,5,97,0,0,451,452,5,109,0,0,452,453,5,111,0,0,453,454,
		5,110,0,0,454,455,5,100,0,0,455,457,5,58,0,0,456,415,1,0,0,0,456,416,1,
		0,0,0,456,436,1,0,0,0,457,78,1,0,0,0,458,487,5,128292,0,0,459,460,5,58,
		0,0,460,461,5,97,0,0,461,462,5,98,0,0,462,463,5,99,0,0,463,487,5,58,0,
		0,464,487,5,128289,0,0,465,466,5,58,0,0,466,467,5,97,0,0,467,468,5,98,
		0,0,468,469,5,99,0,0,469,470,5,100,0,0,470,487,5,58,0,0,471,487,5,128288,
		0,0,472,473,5,58,0,0,473,474,5,99,0,0,474,475,5,97,0,0,475,476,5,112,0,
		0,476,477,5,105,0,0,477,478,5,116,0,0,478,479,5,97,0,0,479,480,5,108,0,
		0,480,481,5,95,0,0,481,482,5,97,0,0,482,483,5,98,0,0,483,484,5,99,0,0,
		484,485,5,100,0,0,485,487,5,58,0,0,486,458,1,0,0,0,486,459,1,0,0,0,486,
		464,1,0,0,0,486,465,1,0,0,0,486,471,1,0,0,0,486,472,1,0,0,0,487,80,1,0,
		0,0,488,494,5,127383,0,0,489,490,5,58,0,0,490,491,5,111,0,0,491,492,5,
		107,0,0,492,494,5,58,0,0,493,488,1,0,0,0,493,489,1,0,0,0,494,82,1,0,0,
		0,495,535,5,9989,0,0,496,497,5,58,0,0,497,498,5,119,0,0,498,499,5,104,
		0,0,499,500,5,105,0,0,500,501,5,116,0,0,501,502,5,101,0,0,502,503,5,95,
		0,0,503,504,5,99,0,0,504,505,5,104,0,0,505,506,5,101,0,0,506,507,5,99,
		0,0,507,508,5,107,0,0,508,509,5,95,0,0,509,510,5,109,0,0,510,511,5,97,
		0,0,511,512,5,114,0,0,512,513,5,107,0,0,513,535,5,58,0,0,514,515,5,10004,
		0,0,515,535,5,65039,0,0,516,517,5,58,0,0,517,518,5,104,0,0,518,519,5,101,
		0,0,519,520,5,97,0,0,520,521,5,118,0,0,521,522,5,121,0,0,522,523,5,95,
		0,0,523,524,5,99,0,0,524,525,5,104,0,0,525,526,5,101,0,0,526,527,5,99,
		0,0,527,528,5,107,0,0,528,529,5,95,0,0,529,530,5,109,0,0,530,531,5,97,
		0,0,531,532,5,114,0,0,532,533,5,107,0,0,533,535,5,58,0,0,534,495,1,0,0,
		0,534,496,1,0,0,0,534,514,1,0,0,0,534,516,1,0,0,0,535,84,1,0,0,0,536,541,
		5,10060,0,0,537,538,5,58,0,0,538,539,5,120,0,0,539,541,5,58,0,0,540,536,
		1,0,0,0,540,537,1,0,0,0,541,86,1,0,0,0,37,0,99,110,140,149,155,162,167,
		173,175,182,188,190,193,200,208,212,216,221,225,229,232,239,259,273,293,
		314,329,352,380,404,413,456,486,493,534,540,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace GlyphScriptCompiler.Antlr
